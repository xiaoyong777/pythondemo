import re

# 搜索整个字符串，直到发现符合的子字符串。
m=re.search('[0-9]','12dhkfhjkdhf')

# 在string中利用正则变换pattern进行搜索，对于搜索到的字符串，用第二个参数替换。返回替换后的字符串。
str = re.sub('[0-9]', '这里有数字', 'sjkd8798s7dksj')

'''
re.split()    # 根据正则表达式分割字符串， 将分割后的所有子字符串放在一个表(list)中返回

>>>print(re.split('[0-9]','a1b2c3'))
['a', 'b', 'c', '']

re.findall()  # 根据正则表达式搜索字符串，将所有符合的子字符串放在一个表(list)中返回

>>>print(re.findall('[0-9]','a1b2c3'))
['1', '2', '3']

'''

# 正则语法：

# 单个字符

# .          任意的一个字符
# a|b        字符a或字符b
# [afg]      a或者f或者g的一个字符
# [0-4]      0-4范围内的一个字符
# [a-f]      a-f范围内的一个字符
# [^m]       不是m的一个字符
# \s         一个空格
# \S         一个非空格
# \d         [0-9]
# \D         [^0-9]
# \w         [0-9a-zA-Z]
# \W         [^0-9a-zA-Z]

# 重复

# *         重复 >=0 次
# +         重复 >=1 次
# ?         重复 0或者1 次
# {m}       重复m次。比如说 a{4}相当于aaaa，再比如说[1-3]{2}相当于[1-3][1-3]
# {m, n}    重复m到n次。比如说a{2, 5}表示a重复2到5次。小于m次的重复，或者大于n次的重复都不符合条件。

# 位置

# ^         字符串的起始位置
# $         字符串的结尾位置

#  正则表达 	    相符的字符串举例             不相符字符串
#  [0-9]{3,5}        	9678
#   a?b                	  b
#   a+b 	           aaaaab
#  ^ab.*c$ 	            abeec 	       cabeec (如果用re.search(), 将无法找到。)

